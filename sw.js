(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.2.4"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.2.4"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.2.4"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.2.4"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){if(!this._cacheKeys[t]){let s=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=y(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[t]=s}return this._cacheKeys[t]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"5e869ecd2176e8e08ad3adf3810da20b","url":"404.html"},{"revision":"bdfb27b3a8e154c6ad337f7a6a374cf1","url":"assets/css/styles.69e1e86c.css"},{"revision":"748d1fd24dd1c92c79c89de13eb60a95","url":"assets/js/02a1e558.fffa32da.js"},{"revision":"c9bcce1141606e2009d96445b178ed76","url":"assets/js/03be7dae.3b867b50.js"},{"revision":"5b5312748f1f9e85d5cdc50b59adf8bd","url":"assets/js/0d71a3f1.ccddf83e.js"},{"revision":"62f8d41ced88550da6fb9f3fd3b719b5","url":"assets/js/14b133ce.4291c7f7.js"},{"revision":"9a5f9abb1ddd9eb850de565417d581eb","url":"assets/js/17896441.7cff2cda.js"},{"revision":"4d01be06c3f3b9ea6654aaa03ddc7c2a","url":"assets/js/18b93cb3.a46c7da1.js"},{"revision":"2fc4c64dcb8b69130239a06283cee948","url":"assets/js/1a421168.415a98dc.js"},{"revision":"41ef13879412fca1431f4719e7763a73","url":"assets/js/1be78505.9edea743.js"},{"revision":"a59384dabea3a6019f73e909c0007446","url":"assets/js/27299a3b.cc2e96e2.js"},{"revision":"832e99f7170b76c8b6ac9bfa9907719e","url":"assets/js/2ae17008.47bbaf4b.js"},{"revision":"0291acb3ba1e5f6ec2ae2ea8cc4d5882","url":"assets/js/3720c009.44247ad4.js"},{"revision":"117145a4d0da90ef4963ebf061603414","url":"assets/js/3793e934.540874f1.js"},{"revision":"9cf2185303ffef54ca99b59a2ad43526","url":"assets/js/407f8801.306e9b3f.js"},{"revision":"08d0937534834f07af5c6e28df3b4324","url":"assets/js/4346.0503a796.js"},{"revision":"129b5e9ce77a20bc5e87d634abb1e631","url":"assets/js/4351d34b.74fff407.js"},{"revision":"38ffac657269e16553143b4e2a7cced7","url":"assets/js/4603.5bd370e4.js"},{"revision":"3786454d5a3535c55a9c83f24dfa8790","url":"assets/js/47c825a2.5585ccd3.js"},{"revision":"e72b5ffed8ba13640bd32bdd9a82db0f","url":"assets/js/4e0c07c5.9eff3691.js"},{"revision":"fd7a5e8d86d6403888cae61fd19610d2","url":"assets/js/4ef1ee20.a3a15e91.js"},{"revision":"0a9bd53ccd155a3a214d5ee3536345f5","url":"assets/js/5038.90fee75e.js"},{"revision":"195a74bc7d4b219dc1b102b1ad448d86","url":"assets/js/50987ff4.f6dbc15f.js"},{"revision":"92af73d825375faaac222d9201f5f81e","url":"assets/js/5131.9004fc1d.js"},{"revision":"9498348fecb20c3cd4c5c2b32fdc6bb1","url":"assets/js/54f44165.d6f1769e.js"},{"revision":"74542d0778d4d221db365e66be74632b","url":"assets/js/55960ee5.88ae4daf.js"},{"revision":"36e5100364b34e4c74e27670dc839981","url":"assets/js/5635425a.e53a49f4.js"},{"revision":"1412da093e79070d0d043752feac05b5","url":"assets/js/6266f1ba.3db6be78.js"},{"revision":"2d27201f17b46752bf2210624273730e","url":"assets/js/63150b11.1476568d.js"},{"revision":"b489501e8a5bd249533695127184f05d","url":"assets/js/651850eb.c18e3926.js"},{"revision":"e6bbac6cd27de430649e4c72d446b651","url":"assets/js/72f058d3.42f47e11.js"},{"revision":"ebabfd8af162cacf98d9e87cfcf1347a","url":"assets/js/79ea3e73.1fb005dd.js"},{"revision":"25f52478e08afb6a6fdabd3b41f36c7f","url":"assets/js/7aeeadd4.74fa6a79.js"},{"revision":"8b3b7f4ca6f999f99963584201ae516e","url":"assets/js/8177.2afd8391.js"},{"revision":"cb78c1cbb9399b3edca37a7f8edd12d4","url":"assets/js/90c91afe.704fc630.js"},{"revision":"0e507c1c72bd30a10d6ac67f15264b98","url":"assets/js/935f2afb.ef236780.js"},{"revision":"1b8382a8153b182b0f54f7f63ebb799a","url":"assets/js/93f0793d.0a1b096e.js"},{"revision":"631e95d49132ab35aa207935232aa85e","url":"assets/js/9903dc99.4c16c523.js"},{"revision":"dac8790720b7a95833873788b8e46846","url":"assets/js/9e4087bc.ff9fafef.js"},{"revision":"58fca62e96a1c96ea6f5da1f86c4e041","url":"assets/js/a09c2993.6ae20efd.js"},{"revision":"2d0fcbdf81b5c629818f92efcf1b3317","url":"assets/js/a74b641e.7886e911.js"},{"revision":"3d2c9619406c25b57ee7eb1bbf42d7ad","url":"assets/js/a9789633.9d2c2c24.js"},{"revision":"59a3afe52adcf0bf071f734cbbc7ed6b","url":"assets/js/adb64ee2.c5d3e589.js"},{"revision":"cbdc9559013974187730d8def6144443","url":"assets/js/b3d480ef.a30499fb.js"},{"revision":"e8c24509cf81cddbb124ad778ecb9524","url":"assets/js/b647df5a.abc3e51d.js"},{"revision":"cb13f1a39622da1097e865ee8e7ee77f","url":"assets/js/c44fa306.588bf5a5.js"},{"revision":"f6cc41e0669b9155f50ae5c735ff2682","url":"assets/js/c4f5d8e4.55caa432.js"},{"revision":"6a0dd9a9693e2babab7edaaf357d71bf","url":"assets/js/d19b9e8a.c23aaed0.js"},{"revision":"aad4b47f25665542bde8c7fe3992618a","url":"assets/js/d4836a8e.12d9ec88.js"},{"revision":"5c2edf41626afb7217866a65ed3441c4","url":"assets/js/d720bb60.11fa8ec5.js"},{"revision":"d77d378380877870a02dc06fedc5d997","url":"assets/js/e1715838.0a5ac411.js"},{"revision":"90297bce155e0c20fd3232f8f5fe35a8","url":"assets/js/eabdbf07.5370b611.js"},{"revision":"c705ba5ee70795a2aaf91a43fbe798a2","url":"assets/js/f0447160.1571e550.js"},{"revision":"dd93455033eaf5d39fa9b56fa7bea003","url":"assets/js/f546eb96.44485562.js"},{"revision":"46eed7330751e5d6e71862cca0437579","url":"assets/js/f97daad0.da4b44db.js"},{"revision":"66057bcc0be763e93e137da471e3a76e","url":"assets/js/fc80686b.3d876e81.js"},{"revision":"a4557858cfe42763b6e6f01d6ffb5e9e","url":"assets/js/main.ed7b36ce.js"},{"revision":"d0437807eb8a7bbb07da484b9e2a30a2","url":"assets/js/runtime~main.2217c200.js"},{"revision":"d0cce73e68d7576d57b316ba5d3aa075","url":"blog/archive/index.html"},{"revision":"88355f7ae40c7831eda1056c5c362f59","url":"docs/8.x/getting-started/installation/index.html"},{"revision":"858debd5126ce270476062d3c0f8324e","url":"docs/8.x/getting-started/options/index.html"},{"revision":"1e77055a598e45cf090ffcc1dd8dd6a5","url":"docs/8.x/getting-started/presets/index.html"},{"revision":"be9c8304a0ca8b194e3305eb3d0c5bd8","url":"docs/8.x/getting-started/test-environment/index.html"},{"revision":"071a0e601d7500168b10dea36cea72bc","url":"docs/8.x/guides/absolute-imports/index.html"},{"revision":"08aef625beb61f776285682ea27be1ff","url":"docs/8.x/guides/angular-ivy/index.html"},{"revision":"71c733a0b65141a4d1618735660d4d43","url":"docs/8.x/guides/esm-support/index.html"},{"revision":"7e78649fdf7e05ac4ca8bdadce3c9adc","url":"docs/8.x/guides/jsdom-version/index.html"},{"revision":"0b5ff993967550231a04a1fab7cc5516","url":"docs/8.x/guides/troubleshooting/index.html"},{"revision":"fa2849a56974fc87ecb142f097469ebe","url":"docs/8.x/guides/using-with-babel/index.html"},{"revision":"5507dede996da6752a6bc6097d08d125","url":"docs/8.x/index.html"},{"revision":"93a303321c8a0e548ee64294997dc4ce","url":"docs/8.x/processing/index.html"},{"revision":"a365460edbc7b98ea43606d989df490f","url":"docs/8.x/tags/index.html"},{"revision":"2a2a5001e61e3b6f77828406916db37e","url":"docs/getting-started/installation/index.html"},{"revision":"0bcaa893c487e599241966e99d3d330b","url":"docs/getting-started/options/index.html"},{"revision":"53e9802062544f7524087a6d72045820","url":"docs/getting-started/presets/index.html"},{"revision":"0e0edabf39b360ef4ebed2e2128f64f9","url":"docs/getting-started/test-environment/index.html"},{"revision":"87cd0a32fca1746900f4d30ddfdb55d3","url":"docs/guides/absolute-imports/index.html"},{"revision":"c617f026b5652340abcf421202549f57","url":"docs/guides/angular-ivy/index.html"},{"revision":"1694c782f1d90d6dbdb9e8fc18b00bfd","url":"docs/guides/esm-support/index.html"},{"revision":"27291cf801d15233b6e23ae0ce8247c5","url":"docs/guides/jsdom-version/index.html"},{"revision":"3767d55d35d930de0cb9e683cb3fc85f","url":"docs/guides/troubleshooting/index.html"},{"revision":"dd8b86a51731779815053aabfc85ba3c","url":"docs/guides/using-with-babel/index.html"},{"revision":"aa8e2f766efee4a5de99773ae484f268","url":"docs/index.html"},{"revision":"8ebd1192471e8be78c94d457d95b300e","url":"docs/next/getting-started/installation/index.html"},{"revision":"933b4582a8e5633887ec31891106fa0d","url":"docs/next/getting-started/options/index.html"},{"revision":"21ed5fa1cbcd8b01c95eb65a2e0f1230","url":"docs/next/getting-started/presets/index.html"},{"revision":"4cef46039e2720d09300b6400b12b34c","url":"docs/next/getting-started/test-environment/index.html"},{"revision":"2163b2eb0a660350925c5b3a729d8d67","url":"docs/next/guides/absolute-imports/index.html"},{"revision":"a6546bef51081e9167791d23c7141182","url":"docs/next/guides/angular-ivy/index.html"},{"revision":"734ba1c3d207ec17f0a00a17e77719fc","url":"docs/next/guides/esm-support/index.html"},{"revision":"3afc914cd3041315e6ef725a94c60e28","url":"docs/next/guides/jsdom-version/index.html"},{"revision":"a583b066790b33630f417d774316ec07","url":"docs/next/guides/troubleshooting/index.html"},{"revision":"cb39248064de7fdd825a832cd570bee4","url":"docs/next/guides/using-with-babel/index.html"},{"revision":"d20bead56f3634166837307627fa96d4","url":"docs/next/index.html"},{"revision":"73386f97185389113003644409ed6ffb","url":"docs/next/processing/index.html"},{"revision":"150a13427c49bd5214d84dd578e9d9c0","url":"docs/next/tags/index.html"},{"revision":"3253dcf2fc1d6d256bfc82bb6cde984a","url":"docs/processing/index.html"},{"revision":"ec7a74e3452f35cf978471c86ddd1d2c","url":"docs/tags/index.html"},{"revision":"3ee4cca568c551e79af71c45689148c6","url":"index.html"},{"revision":"39d0f7b81200aacb9b15b16745bd2264","url":"manifest.json"},{"revision":"4aad4f9ff4377954561916212a4d1a8a","url":"versions/index.html"},{"revision":"f8389ca1a741a115313bede9ac02e2c0","url":"img/discord.svg"},{"revision":"5e0e02d0c0f021b2037ed926d68ea1be","url":"img/documentation.png"},{"revision":"a83841c50aa67da6144860bd5031cc53","url":"img/github.png"},{"revision":"a2552d19b3538a030407a0191c99cae1","url":"img/logo.svg"},{"revision":"ee83b65c3aed4a45b928a4bebeb97a98","url":"img/pull-request.png"},{"revision":"cce226b035fb4ab5eee43b077db1ba4a","url":"img/troubleshooting.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();